{
    "type": "programming",
    "id": 33,
    "title": "HelloWorld",
    "shortName": "helloworld",
    "maxPoints": 1.0,
    "bonusPoints": 0.0,
    "assessmentType": "AUTOMATIC",
    "releaseDate": "2025-01-09T16:11:00Z",
    "startDate": "2025-01-09T16:11:00Z",
    "difficulty": "MEDIUM",
    "mode": "INDIVIDUAL",
    "allowComplaintsForAutomaticAssessments": false,
    "allowFeedbackRequests": false,
    "includedInOverallScore": "INCLUDED_COMPLETELY",
    "problemStatement": "# Example Hello World\n\n1. [task][SimpleHelloWorld greetings()](TestHelloWorld | Tests if the greetings method returns the correct string.)\n    Implementieren Sie die Methode `greetings()` in der Klasse SimpleHelloWorld. Die Methode soll den String \"Hello World!\" zurückgeben.",
    "presentationScoreEnabled": false,
    "secondCorrectionEnabled": false,
    "course": {
        "id": 8,
        "title": "Komplexe Programme 262004",
        "shortName": "KPROG",
        "studentGroupName": "artemis-KPROG-students",
        "teachingAssistantGroupName": "artemis-KPROG-tutors",
        "editorGroupName": "artemis-KPROG-editors",
        "instructorGroupName": "artemis-KPROG-instructors",
        "startDate": "2024-09-01T12:26:00Z",
        "endDate": "2025-03-01T14:03:00Z",
        "enrollmentStartDate": "2024-08-31T12:26:00Z",
        "enrollmentEndDate": "2025-03-01T14:03:00Z",
        "testCourse": false,
        "defaultProgrammingLanguage": "JAVA",
        "onlineCourse": false,
        "courseInformationSharingConfiguration": "COMMUNICATION_AND_MESSAGING",
        "courseInformationSharingMessagingCodeOfConduct": "<!-- Code of Conduct Template: Adapt to your demands -->\n<!-- Important: This template will directly be shown on the iOS and Android client if a course has no explicit code of conduct set. -->\n\nWe as students, tutors, and instructors pledge to make participation in our course a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\n### Examples of behavior that contributes to a positive environment for our community include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\n### Examples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Scope\n\nThis Code of Conduct applies within all messages channels.\n\n## Reporting\n\nEach course is represented by instructors. If you see inappropriate behavior or content, please report it.\nYou may find a list of contacts responsible for this course below.\n\n<!-- The responsible users are automatically compiled from the course's instructors -->\n",
        "maxComplaints": 3,
        "maxTeamComplaints": 3,
        "maxComplaintTimeDays": 7,
        "maxRequestMoreFeedbackTimeDays": 7,
        "maxComplaintTextLimit": 2000,
        "maxComplaintResponseTextLimit": 2000,
        "enrollmentEnabled": true,
        "unenrollmentEnabled": false,
        "maxPoints": 236,
        "accuracyOfScores": 1,
        "restrictedAthenaModulesAccess": false,
        "learningPathsEnabled": false,
        "studentCourseAnalyticsDashboardEnabled": false,
        "complaintsEnabled": true,
        "requestMoreFeedbackEnabled": true
    },
    "plagiarismDetectionConfig": {
        "continuousPlagiarismControlEnabled": false,
        "continuousPlagiarismControlPostDueDateChecksEnabled": false,
        "continuousPlagiarismControlPlagiarismCaseStudentResponsePeriod": 7,
        "similarityThreshold": 90,
        "minimumScore": 0,
        "minimumSize": 50
    },
    "testRepositoryUri": "https://artemis.it.hs-heilbronn.de/git/KPROGHELLOWORLD/kproghelloworld-tests.git",
    "allowOnlineEditor": true,
    "allowOfflineIde": true,
    "allowOnlineIde": false,
    "staticCodeAnalysisEnabled": false,
    "programmingLanguage": "JAVA",
    "packageName": "prog.example",
    "showTestNamesToStudents": true,
    "testCasesChanged": true,
    "projectKey": "KPROGHELLOWORLD",
    "projectType": "PLAIN_GRADLE",
    "releaseTestsWithExampleSolution": false,
    "buildConfig": {
        "id": 31,
        "sequentialTestRuns": true,
        "branch": "main",
        "buildPlanConfiguration": "{\"api\":\"v0.0.1\",\"metadata\":{\"docker\":{\"image\":\"ls1tum/artemis-maven-template:java17-21\",\"parameters\":[\"--cpus\",\"\\\"2\\\"\",\"--memory\",\"\\\"2g\\\"\",\"--memory-swap\",\"\\\"2g\\\"\",\"--pids-limit\",\"\\\"1000\\\"\"]}},\"actions\":[{\"name\":\"structural_tests\",\"results\":[{\"name\":\"junit_**/test-results/structuralTests/*.xml\",\"path\":\"**/test-results/structuralTests/*.xml\",\"type\":\"junit\",\"before\":false}],\"runAlways\":false,\"script\":\"chmod +x ./gradlew\\n./gradlew clean structuralTests\"},{\"name\":\"behavior_tests\",\"results\":[{\"name\":\"junit_**/test-results/behaviorTests/*.xml\",\"path\":\"**/test-results/behaviorTests/*.xml\",\"type\":\"junit\",\"before\":false}],\"runAlways\":false,\"script\":\"./gradlew behaviorTests\"}],\"results\":[{\"name\":\"junit_**/test-results/structuralTests/*.xml\",\"path\":\"**/test-results/structuralTests/*.xml\",\"type\":\"junit\",\"before\":false},{\"name\":\"junit_**/test-results/behaviorTests/*.xml\",\"path\":\"**/test-results/behaviorTests/*.xml\",\"type\":\"junit\",\"before\":false}],\"scriptActions\":[{\"name\":\"structural_tests\",\"results\":[{\"name\":\"junit_**/test-results/structuralTests/*.xml\",\"path\":\"**/test-results/structuralTests/*.xml\",\"type\":\"junit\",\"before\":false}],\"runAlways\":false,\"script\":\"chmod +x ./gradlew\\n./gradlew clean structuralTests\"},{\"name\":\"behavior_tests\",\"results\":[{\"name\":\"junit_**/test-results/behaviorTests/*.xml\",\"path\":\"**/test-results/behaviorTests/*.xml\",\"type\":\"junit\",\"before\":false}],\"runAlways\":false,\"script\":\"./gradlew behaviorTests\"}]}",
        "buildScript": "#!/usr/bin/env bash\nset -e\nexport AEOLUS_INITIAL_DIRECTORY=${PWD}\nstructural_tests () {\n  echo '⚙️ executing structural_tests'\n  chmod +x ./gradlew\n  ./gradlew clean structuralTests\n}\n\nbehavior_tests () {\n  echo '⚙️ executing behavior_tests'\n  ./gradlew behaviorTests\n}\n\nmain () {\n  if [[ \"${1}\" == \"aeolus_sourcing\" ]]; then\n    return 0 # just source to use the methods in the subshell, no execution\n  fi\n  local _script_name\n  _script_name=${BASH_SOURCE[0]:-$0}\n  cd \"${AEOLUS_INITIAL_DIRECTORY}\"\n  bash -c \"source ${_script_name} aeolus_sourcing; structural_tests\"\n  cd \"${AEOLUS_INITIAL_DIRECTORY}\"\n  bash -c \"source ${_script_name} aeolus_sourcing; behavior_tests\"\n}\n\nmain \"${@}\"\n",
        "checkoutSolutionRepository": false,
        "timeoutSeconds": 0,
        "testwiseCoverageEnabled": false,
        "allowBranching": false,
        "windfile": {
            "api": "v0.0.1",
            "metadata": {
                "docker": {
                    "image": "ls1tum/artemis-maven-template:java17-21",
                    "parameters": [
                        "--cpus",
                        "\"2\"",
                        "--memory",
                        "\"2g\"",
                        "--memory-swap",
                        "\"2g\"",
                        "--pids-limit",
                        "\"1000\""
                    ]
                }
            },
            "actions": [
                {
                    "name": "structural_tests",
                    "results": [
                        {
                            "name": "junit_**/test-results/structuralTests/*.xml",
                            "path": "**/test-results/structuralTests/*.xml",
                            "type": "junit",
                            "before": false
                        }
                    ],
                    "runAlways": false,
                    "script": "chmod +x ./gradlew\n./gradlew clean structuralTests"
                },
                {
                    "name": "behavior_tests",
                    "results": [
                        {
                            "name": "junit_**/test-results/behaviorTests/*.xml",
                            "path": "**/test-results/behaviorTests/*.xml",
                            "type": "junit",
                            "before": false
                        }
                    ],
                    "runAlways": false,
                    "script": "./gradlew behaviorTests"
                }
            ],
            "results": [
                {
                    "name": "junit_**/test-results/structuralTests/*.xml",
                    "path": "**/test-results/structuralTests/*.xml",
                    "type": "junit",
                    "before": false
                },
                {
                    "name": "junit_**/test-results/behaviorTests/*.xml",
                    "path": "**/test-results/behaviorTests/*.xml",
                    "type": "junit",
                    "before": false
                }
            ],
            "scriptActions": [
                {
                    "name": "structural_tests",
                    "results": [
                        {
                            "name": "junit_**/test-results/structuralTests/*.xml",
                            "path": "**/test-results/structuralTests/*.xml",
                            "type": "junit",
                            "before": false
                        }
                    ],
                    "runAlways": false,
                    "script": "chmod +x ./gradlew\n./gradlew clean structuralTests"
                },
                {
                    "name": "behavior_tests",
                    "results": [
                        {
                            "name": "junit_**/test-results/behaviorTests/*.xml",
                            "path": "**/test-results/behaviorTests/*.xml",
                            "type": "junit",
                            "before": false
                        }
                    ],
                    "runAlways": false,
                    "script": "./gradlew behaviorTests"
                }
            ]
        }
    },
    "type": "programming",
    "exerciseType": "PROGRAMMING",
    "defaultTestCaseVisibility": "ALWAYS",
    "studentAssignedTeamIdComputed": false,
    "gradingInstructionFeedbackUsed": false,
    "visibleToStudents": true,
    "teamMode": false
}